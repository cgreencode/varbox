
    /**
     * @var DummyLastModelSegment
     */
    protected $model;

    /**
     * @param DummyLastModelSegment $DummyModelName
     */
    public function __construct(DummyLastModelSegment $DummyModelName)
    {
        $this->model = $DummyModelName;
    }

    /**
     * @param Request $request
     * @param DummyLastModelSegmentFilter $filter
     * @param DummyLastModelSegmentSort $sort
     * @return \Illuminate\View\View
     * @throws \Exception
     */
    public function index(Request $request, DummyLastModelSegmentFilter $filter, DummyLastModelSegmentSort $sort)
    {
        return $this->_index(function () use ($request, $filter, $sort) {
            $this->items = $this->model
                ->filtered($request->all(), $filter)
                ->sorted($request->all(), $sort)
                ->paginate(config('varbox.crud.per_page', 30));

            $this->title = 'DummyPluralName';
            $this->view = view('DummyViewsPath.index');
        });
    }

    /**
     * @return \Illuminate\View\View
     * @throws \Exception
     */
    public function create()
    {
        return $this->_create(function () {
            $this->title = 'Add DummySingularName';
            $this->view = view('DummyViewsPath.add');
        });
    }

    /**
     * @param Request $request
     * @return \Illuminate\Http\RedirectResponse
     * @throws \Exception
     */
    public function store(DummyLastModelSegmentRequest $request)
    {
        return $this->_store(function () use ($request) {
            $this->item = $this->model->create($request->all());
            $this->redirect = redirect()->route('admin.DummySnakeName.index');
        }, $request);
    }

    /**
     * @param DummyLastModelSegment $DummyModelName
     * @return \Illuminate\View\View
     * @throws \Exception
     */
    public function edit(DummyLastModelSegment $DummyModelName)
    {
        return $this->_edit(function () use ($DummyModelName) {
            $this->item = $DummyModelName;
            $this->title = 'Edit DummySingularName';
            $this->view = view('DummyViewsPath.edit');
        });
    }

    /**
     * @param Request $request
     * @param DummyLastModelSegment $DummyModelName
     * @return \Illuminate\Http\RedirectResponse
     * @throws \Exception
     */
    public function update(DummyLastModelRequest $request, DummyLastModelSegment $DummyModelName)
    {
        return $this->_update(function () use ($request, $DummyModelName) {
            $this->item = $DummyModelName;
            $this->redirect = redirect()->route('admin.DummySnakeName.index');

            $this->item->update($request->all());
        }, $request);
    }

    /**
     * @param DummyLastModelSegment $DummyModelName
     * @return \Illuminate\Http\RedirectResponse
     * @throws \Exception
     */
    public function destroy(DummyLastModelSegment $DummyModelName)
    {
        return $this->_destroy(function () use ($DummyModelName) {
            $this->item = $DummyModelName;
            $this->redirect = redirect()->route('admin.DummySnakeName.index');

            $this->item->delete();
        });
    }
